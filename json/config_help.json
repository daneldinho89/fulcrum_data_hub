{
    "json_file_path": "../exports/angles_timeline.json"
    , "page_title": "html_pretty"
    , "arrangement": {"rows": 8, "columns": 1}
    , "colours": {"fulcrum":"#532CEB"
                , "light_grey": "#EFEFEF"
    }
    , "variables": {"var1": ["count_clips", ""]
                    , "var2": ["count_clips", ""]
                    , "matrix_table": ["count_clips_table"
                                    , ["all_rows"]
                                    , ["all_qualifiers"]
                    ]
                    , "my_time": ["min_time_start", ""]
                    , "first_half": ["count_clips", "", [], 0, "my_time + 60*45"]
                    , "second_half": ["count_clips", "", [], "my_time + 60*45"]

    }
    , "content": { "intro_text": ["create_text", "Welcome to the Fulcrum HTML reporting documentation! We're thrilled to guide you in creating your own stats reports with ease. Using a straightforward json configuration file, we'll take you through the process step-by-step, so you can get started in no time. The best part? You don't have to be a coding wizard to do it! Once you've got the hang of the basics, you can even explore deeper customization for your reports using popular programming languages like JavaScript, HTML, and CSS. In fact, this very page you're reading was crafted using the same json configuration method! So, let's jump in and elevate your reporting game to new heights!", "#A1", 20, "grey"]
                , "button": ["create_button_link", "< Home", "#A1", "index.html"] 
                , "getting_started_heading": ["create_text", "Getting Started", "#A2", 32]
                , "getting_started_intro": ["create_text", "We'll begin by covering the fundamentals of HTML reporting and how you can create your own stats reports using a simple json configuration file. Whether you're an experienced coder or a complete beginner, this section will equip you with the knowledge you need to get up and running swiftly.", "#A2", 16, "grey"]
                , "getting_started_sub1": ["create_text", "What are HTML reports?", "#A2", 20]
                , "getting_started_basics": ["create_text", "HTML reports are a way to present data and statistics in a visually appealing and easily accessible format. By leveraging the power of HTML, CSS, and JavaScript, you can create interactive, customizable reports without needing extensive coding experience. These reports often make use of frameworks and libraries, such as Bootstrap 5 and D3.js, to simplify the process and enhance the final outcome.","#A2",16,"grey"]
                , "getting_started_basic_webpage_structure": ["create_text","The foundation of an HTML report is the structure of a webpage, which consists of HTML elements organized in a hierarchical manner. The essential elements include the <html> tag, which wraps the entire document, the <head> tag, where metadata and linked resources reside, and the <body> tag, which contains the main content of the page. By properly structuring your HTML, you can create well-organized reports that are both visually appealing and easy to navigate.","#A2",16,"grey"]
                , "getting_started_bootstrap_5": ["create_text","Bootstrap is a popular front-end framework that simplifies the process of designing responsive, mobile-first web pages. It provides pre-built components, such as navigation bars, cards, and forms, which can be easily customized and incorporated into your HTML reports. By using Bootstrap 5, you can create professional-looking, responsive reports with minimal effort.","#A2",16,"grey"]
                , "getting_started_css": ["create_text","Cascading Style Sheets (CSS) is a language used for styling web pages. With CSS, you can control the appearance of HTML elements, including their layout, colors, fonts, and animations. By applying CSS to your HTML reports, you can create visually engaging and aesthetically pleasing presentations that effectively communicate your data.","#A2",16, "grey"]
                , "getting_started_javascript": ["create_text","JavaScript is a widely used programming language that allows you to add interactivity and dynamic content to your HTML reports. With JavaScript, you can manipulate the DOM (Document Object Model), handle user input, and even fetch data from external sources. Incorporating JavaScript into your reports can greatly enhance their functionality and user experience.","#A2",16,"grey"]
                , "getting_started_d3_js": ["create_text","D3.js is a powerful JavaScript library for manipulating documents based on data. It helps you bring data to life using HTML, SVG, and CSS, enabling you to create visually stunning and interactive data visualizations. By incorporating D3.js into your HTML reports, you can create highly engaging and informative visual representations of your data that allow users to explore and understand the information more effectively.","#A2",16,"grey"]
                , "getting_started_fulcrum_ease": ["create_text","Fulcrum has made this even easier by incorporating all these technologies and bundling them into an easy-to-use json config file. This approach allows you to harness the power of HTML, CSS, JavaScript, Bootstrap 5, and D3.js without the need for extensive coding knowledge. By following the simple configuration steps provided in the documentation, you can create visually stunning and interactive reports that cater to your specific needs while saving time and effort.","#A2",16,"grey"]
                
                , "getting_started_sub2": ["create_text", "Things You'll Need", "#A2", 20]
                , "getting_started_text_things": ["create_text", "Here is a list of things you should ensure you have on your mac before starting:", "#A2", 16, "grey"]
                , "getting_started_list1": ["create_text", " • The HTML reports template .zip folder which you probably already have if you're reading this!", "#A2", 16, "grey"]
                , "getting_started_list2": ["create_text", " • Web browser such as Safari, Chrome or Firefox", "#A2", 16, "grey"]
                , "getting_started_list3": ["create_text", " • Text editor such as \"Sublime Text\" which will help highlight the syntax and avoid tedious coding errors", "#A2", 16, "grey"]
                , "getting_started_list4": ["create_text", " • Local web server such as \"MAMP\" (free download to run on MacOS) or a Piston Server to run your html reports on", "#A2", 16, "grey"]
                , "getting_started_list5": ["create_text", " • An outline of what you want to create and a sprinkle of creativity!!", "#A2", 16, "grey"]


                , "getting_started_title1": ["create_text", "STEP 1", "#A2", 20]
                , "getting_started_step1": ["create_text", "Create a new page by duplicating the template used in fulcrumfc.html. To do this, right click the \"fulcrumfc.html\" file and copy and paste it into the same directory. Rename the new HTML file with your desired name, for example, \"new_page.html,\". You now have an identical template to work with!", "#A2", 16, "grey"]
                , "getting_started_img1": ["create_image", "images/step1.png", "#A2", 500]
                , "getting_started_title2": ["create_text", "STEP 2", "#A2", 20]
                , "getting_started_step2": ["create_text", "Locate a config JSON file in the JSON folder, which is crucial for the functionality of your new page. Copy the file and name it so that it matches up to your new HTML page, like \"config_new_page.json\". This ensures a seamless connection between the HTML and JSON files.", "#A2", 16, "grey"]
                , "getting_started_img2": ["create_image", "images/step2.png", "#A2", 500]
                , "getting_started_title3": ["create_text", "STEP 3", "#A2", 20]
                , "getting_started_step3": ["create_text", "In your new html page, locate the navigation sidebar section within the <body> tag of the HTML. Here, you'll find <li> elements representing the links to other pages. Copy one of these elements and paste it where you'd like to insert the new link.", "#A2", 16, "grey"]
                , "getting_started_img3": ["create_image", "images/step3.png", "#A2", 600]
                , "getting_started_step3a": ["create_text", "Update the <a> tag's href attribute with the new page's filename (e.g., \"new_page.html\") and change the link text accordingly. If you want a different logo, search for free Bootstrap icons on the internet. Copy and paste the SVG code for your chosen icon, ensuring the class parameters match the other <li> SVG elements. Update the img tag \"src\" path to the new file. To maintain consistency, add this new <li> tag to the navigation sidebar of all other pages on the site.", "#A2", 16, "grey"]
                , "getting_started_img3a": ["create_image", "images/step3a.png", "#A2", 500]
                , "getting_started_title4": ["create_text", "STEP 4", "#A2", 20]
                , "getting_started_step4": ["create_text", "Customise the config JSON file you created earlier. Get acquainted with its functions in the next section.", "#A2", 16, "grey"]
                , "getting_started_img4": ["create_image", "images/step4.png", "#A2", 600]
                , "getting_started_title5": ["create_text", "STEP 5", "#A2", 20]
                , "getting_started_step5": ["create_text", "Test your new page by viewing it offline using a MAMP server or with your Piston server. Without a server your data will not calculate. To set up a free MAMP server, download and install MAMP from the website, then follow the setup instructions. MAMP allows you to run your HTML files on a local server for testing purposes. For troubleshooting and fault-finding, use the browser console. In Google Chrome, press Ctrl + Shift + J (Windows) or Cmd + Option + J (Mac) to open the console. In the console, you can view error messages, log outputs, and interact with the JavaScript code for your webpage. Other browsers, like Firefox and Safari, also have similar developer tools. Using these tools will help you identify and resolve any issues that may arise while working on your HTML stats report.", "#A2", 16, "grey"]
                , "getting_started_img5": ["create_image", "images/step5.png", "#A2", 600]
                , "button1": ["create_button_link", "^ Back to the top", "#A2", "help.html"] 

                , "json_config_heading": ["create_text", "Understanding JSON Configuration Files", "#A3", 32]
                , "json_config_intro": ["create_text", "In this section, we'll dive deeper into the world of JSON configuration files. You'll learn what they are, how they work, and how you can use them to create powerful reports with minimal coding. We'll provide you with plenty of examples to help you understand the concepts, and by the end of this section, you'll have a solid grasp of how to work with JSON configuration files.", "#A3", 16, "grey"]
                , "json_config_img1": ["create_image", "images/step4.png", "#A3", 600]
                , "json_config_title1": ["create_text", "\"json_file_path\":", "#A3", 20]
                , "json_config_text1": ["create_text", "The relative file path of the json data file to be analyzed. This json file could be exported from an Angles timelime or simply the angles_timeline.json export in the Piston \"exports\" folder, which is created in each new session you create on a Piston Server.", "#A3", 16, "grey"]
                , "json_config_code1": ["create_text", "e.g:   \"json_file_path\": \"../exports/angles_timeline.json\"", "#A3", 12, "orange"]
                , "json_config_title2": ["create_text", "\"page_title\":", "#A3", 20]
                , "json_config_text2": ["create_text", "If you want to set a custom title, change the value to your desired text string. Leaving it blank (\"\") will remove the HTML element entirely. By default, this should be set \"html_pretty\" and this will then use the name of the html file as the main page heading.", "#A3", 16, "grey"]
                , "json_config_code2": ["create_text", "e.g:   \"page_title\": \"html_pretty\"", "#A3", 12, "orange"]
                , "json_config_title3": ["create_text", "\"arrangement\":", "#A3", 20]
                , "json_config_text3": ["create_text", "Define the grid structure of your report by specifying the number of rows and columns. The resulting grid uses gives ids to each part of the grid in the \"A1\" style convention, similar to what is used when defining cell references in a spreadsheet, where the letter represents the column, and the number represents the row. This allows us to tell the report where to place our content later on...", "#A3", 16, "grey"]
                , "json_config_code3": ["create_text", "e.g:   {\"rows\": 3, \"columns\": [4, 1, 1]}", "#A3", 12, "orange"]
                , "json_config_img2": ["create_image", "images/json_config_arrangement1.png", "#A3", 600]
                , "json_config_text3a": ["create_text", "You can also define how many columns you want in specific rows by passing an array for the columns value. i.e. rows:3, columns [1, 2, 2] would give you this structure", "#A3", 16, "grey"]
                , "json_config_img3": ["create_image", "images/json_config_arrangement2.png", "#A3", 300]
                , "json_config_title4": ["create_text", "\"colours\":", "#A3", 20]
                , "json_config_text4": ["create_text", "Define custom colors using RGB and HEX values. Mac tools like Digital Colour Meter can help you pick specific colors from your logo or branding.", "#A3", 16, "grey"]
                , "json_config_code4": ["create_text", "e.g:   {\"colour_name\":\"#hex_value\"}", "#A3", 12, "orange"]
                , "json_config_title5": ["create_text", "\"variables\":", "#A3", 20]
                , "json_config_text5": ["create_text", "Here, the true power of using json config files is harnessed. You can use the Angles.js functions to calculate and store values for your report. The \"var_name\" can then be used to recall the calculations in the content functions.", "#A3", 16, "grey"]
                , "json_config_code5": ["create_text", "e.g:   \"variables\": {\"var_name\": [\"function\", \"row_name\", [{\"qualifier_category\": \"qualifier_name\", \"attributes\":{\"attribute_category\": \"attribute_name\"} }] , \"start_time\", \"end_time\"  ] }", "#A3", 12, "orange"]
                , "json_config_text5aa": ["create_text", "Below is a list of the functions currently available:", "#A3", 16, "grey"]
                , "json_config_text5a": ["create_text", " • count_clips", "#A3", 16, "grey"]
                , "json_config_text5b": ["create_text", " • count_qualifiers", "#A3", 16, "grey"]
                , "json_config_text5d": ["create_text", " • count_qualifier_patterns", "#A3", 16, "grey"]
                , "json_config_text5e": ["create_text", " • sum_clip_durations", "#A3", 16, "grey"]
                , "json_config_text5f": ["create_text", " • count_clips_table", "#A3", 16, "grey"]
                , "json_config_text5g": ["create_text", " • min_time_start", "#A3", 16, "grey"]
                , "json_config_text5h": ["create_text", " • max_time_end", "#A3", 16, "grey"]
                , "json_config_text5z": ["create_text", "More information on the available functions is in the \"Variable Functions\" section below.", "#A3", 16, "grey"]
                , "json_config_title6": ["create_text", "\"content\":", "#A3", 20]
                , "json_config_text6": ["create_text", "Finally this is the place where you can add the calculations stored in the variables into content blocks and actually place this into your arrangement using the grid ids.", "#A3", 16, "grey"]
                , "json_config_code6": ["create_text", "e.g:   \"content\": {\"content_name\": [\"function\", \"content_title\", \"variable_name/s\", \"location_id\", ...size/colour/etc depending on function used...]}", "#A3", 12, "orange"]
                , "json_config_text6a": ["create_text", " • create_data_card", "#A3", 16, "grey"]
                , "json_config_text6b": ["create_text", " • create_success_donut", "#A3", 16, "grey"]
                , "json_config_text6c": ["create_text", " • create_contest_bar", "#A3", 16, "grey"]
                , "json_config_text6d": ["create_text", " • create_text", "#A3", 16, "grey"]
                , "json_config_text6e": ["create_text", " • create_image", "#A3", 16, "grey"]
                , "json_config_text6f": ["create_text", " • create_table", "#A3", 16, "grey"]
                , "json_config_text6g": ["create_text", " • create_button_link", "#A3", 16, "grey"]
                , "json_config_text6Z": ["create_text", "More information on the available functions is in the \"Content Functions\" section below.", "#A3", 16, "grey"]
                , "button2": ["create_button_link", "^ Back to the top", "#A3", "help.html"] 
                

                , "variable_funcs_heading": ["create_text", "Variable Functions", "#A4", 32]
                , "variable_funcs_intro": ["create_text", "Variable functions are used within the \"variables\" section of your JSON configuration file to process and store data from your json data file. These functions help you calculate specific values that you can later use in the content functions to display information on your report.", "#A4", 16, "grey"]
                , "variable_funcs_img1": ["create_image", "images/variables.png", "#A4", 600]
                , "variable_funcs_title1": ["create_text", "count_clips", "#A4", 20]
                , "variable_funcs_text1": ["create_text", "This function will likely be the most commonly used function. It counts the number of clips in the dataset which match the clip row name and any relevant search criteria. The search criteria can include an array of qualifiers and attributes.", "#A4", 16, "grey"]
                , "variable_funcs_code1": ["create_text", "Basic format: [\"count_clips\", \"row_name\", [search_criteria], \"start_time\", \"end_time\" ]", "#A4", 12, "orange"]
                , "variable_funcs_text1aa": ["create_text", "In the following example, we want to know how many shots the opposition had during the game. The count_clips function works by calculating how many clips in the timeline exist in the \"Opposition Shots\" row. By leaving the search_criteria blank, the function will not concern itself with filtering the results by qualifier or attribute.", "#A4", 16, "grey"]
                , "variable_funcs_code1aa": ["create_text", "e.g: [\"count_clips\", \"Opposition Shots\", [] ]", "#A4", 12, "orange"]
                , "variable_funcs_text1a": ["create_text", "Now we want to know how many shots ON TARGET the opposition had. The count_clips function works by calculating how many clips in the timeline exist in the \"Opposition Shots\" row which include a qualifier with the qualifier name, \"On Target\", and qualifier category \"Outcome\".", "#A4", 16, "grey"]
                , "variable_funcs_code1a": ["create_text", "e.g: [\"count_clips\", \"Opposition Shots\", [{\"Outcome\": \"On Target\"}]", "#A4", 12, "orange"]
                , "variable_funcs_text1b": ["create_text", "What if we want to know how many shots on target the opposition had during the game which were from Rex? Now, Rex is a second qualifier so our next example shows how we can query the dataset for two qualifiers.", "#A4", 16, "grey"]
                , "variable_funcs_code1b": ["create_text", "e.g: [\"count_clips\", \"Opposition Shots\", [{\"Outcome\": \"On Target\"}, {\"Player\": \"Rex\"}]", "#A4", 12, "orange"]
                , "variable_funcs_text1c": ["create_text", "Finally, what if we wanted to know how many shots on target the opposition had during the game which were saved by the goalkeeper AND the shot came from Rex? Firstly we need to understand how this data is represented in our dataset. In our fictional dataset, this is an attribute of the \"On Target\" qualifier. The example below shows how we can query the dataset for two qualifiers where one also has an attribute:", "#A4", 16, "grey"]
                , "variable_funcs_code1c": ["create_text", "e.g: [\"count_clips\", \"Opposition Shots\", [{\"Outcome\": \"On Target\", \"attributes\": {\"GK Save\": \"Saved\"}}, {\"Player\": \"Rex\"}]", "#A4", 12, "orange"]
                , "variable_funcs_text1d": ["create_text", "As you can see there is lots of potential to query your data using this function. The best part is that once you understand this structure, almost every variable function that you can use with Fulcrum HTML reports uses this search_criteria format. In JSON terminology this is known as an \"array of objects\".", "#A4", 16, "grey"]
                , "variable_funcs_text1e": ["create_text", "You can even try putting \"\" as the row_name and the function will search in ALL clips regardless of their name! Now... have a go yourself and see what you can produce!", "#A4", 16, "grey"]
                , "variable_funcs_title2": ["create_text", "count_qualifiers", "#A4", 20]
                , "variable_funcs_text2": ["create_text", "Rather than counting clips, this function counts the number of qualifiers in a row, with a specific category and name", "#A4", 16, "grey"]
                , "variable_funcs_code2": ["create_text", "Basic format: [\"count_qualifiers\", \"row_name\", [search_criteria] , \"start_time\", \"end_time\" ]", "#A4", 12, "orange"]
                , "variable_funcs_text2a": ["create_text", "In the following example, we want to know how many passes we had during our possession and we might have multiple 'Pass' qualifiers in a single clip. The count_qualifiers function works by calculating how many qualifiers in the timeline exist in the \"Possesion\" row's clips which include a qualifier with the qualifier name, \"Pass\", and qualifier category \"Action\".", "#A4", 16, "grey"]
                , "variable_funcs_code2a": ["create_text", "e.g: [\"count_qualifiers\", \"Possession\", [{\"Action\": \"Pass\"}]", "#A4", 12, "orange"]
                , "variable_funcs_title3": ["create_text", "count_qualifier_patterns", "#A4", 20]
                , "variable_funcs_text3": ["create_text", "This function counts the number of occurrences in the dataset of a qualifier sequence or pattern which is given in the search criteria", "#A4", 16, "grey"]
                , "variable_funcs_code3": ["create_text", "Basic format: [\"count_qualifier_patterns\", \"row_name\", [{q1_cat: q1_name}, {q2_cat: q2_name}] , \"start_time\", \"end_time\" ]", "#A4", 12, "orange"]
                , "variable_funcs_text3a": ["create_text", "In the following example, we want to know how many passes Rex has made. Instead of a clip > qualifier > attribute hierarchy we sometimes get a dataset which coded a qualifier pattern and in this case it is a player qualifier followed by their action qualifier within the possession clip.", "#A4", 16, "grey"]
                , "variable_funcs_code3a": ["create_text", "e.g: [\"count_qualifier_patterns\", \"Possession\", [{\"Player\": \"Rex\"}, {\"Action\": \"Pass\"}]", "#A4", 12, "orange"]
                , "variable_funcs_text3b": ["create_text", "Order matters here! The quality of the report is reliant on the quality of data it uses. If, in this example, our coder did not follow the rules of the coding pattern, 'player > action', and mistakenly coded 'action > player' this will not be picked up by this pattern search. It is always valuable to check the coding before processing it for reporting.", "#A4", 16, "grey"]
                , "variable_funcs_title4": ["create_text", "sum_clip_durations", "#A4", 20]
                , "variable_funcs_text4": ["create_text", "This function calculates the sum of clip durations for a specific row and search criteria", "#A4", 16, "grey"]
                , "variable_funcs_code4": ["create_text", "Basic format: [\"sum_clip_durations\", \"row_name\", [search_criteria] , \"start_time\", \"end_time\" ]", "#A4", 12, "orange"]
                , "variable_funcs_text4a": ["create_text", "In the following example, we want to know how long the combined length of ball in play clips total up to during the game. The sum_clip_durations function works by calculating the length of each clip in the timeline which exist in the \"Ball in Play\" row. With no search criteria defined, the function will simply search all clips regardless of any qualifiers or attibutes that might be present", "#A4", 16, "grey"]
                , "variable_funcs_code4a": ["create_text", "e.g: [\"sum_clip_durations\", \"Ball in Play\", [] ]", "#A4", 12, "orange"]
                , "variable_funcs_title5": ["create_text", "count_clips_table", "#A4", 20]
                , "variable_funcs_text5": ["create_text", "This function creates a table displaying the number of clips per row", "#A4", 16, "grey"]
                , "variable_funcs_code5": ["create_text", "Basic format: [\"count_clips_table\", [clip_row_names], [qualifier_column_names] ]", "#A4", 12, "orange"]
                , "variable_funcs_text5a": ["create_text", "In the following example, we want to create a table of key actions performed in the clip row called 'FulcrumFC'. The count_clips_table function works by calculating how many clips in the timeline exist for each given clip row name and returns a matrix corresponding to the given qualifier names. This example has one row name but you can have multiple if you wish!", "#A4", 16, "grey"]
                , "variable_funcs_code5a": ["create_text", "e.g: [\"count_clips_table\", [\"FulcrumFC\"], [\"Pass\", \"Tackle\", \"Cross\", \"Shot\"]", "#A4", 12, "orange"]
                , "variable_funcs_text5b": ["create_text", "The function saves all the calculations into an object and stores it into the variable. Remember to add the table to a \"create_table\" content function to display it in your report like this:", "#A4", 16, "grey"]
                , "variable_funcs_img2": ["create_image", "images/table.png", "#A4", 800]
                , "variable_funcs_title6": ["create_text", "min_time_start", "#A4", 20]
                , "variable_funcs_text6": ["create_text", "This function searched for the earliest start time of the first clip. It can be row specific or search all clips if using \"\". This value can even be used in the other variable functions if it is defined before it is used.", "#A4", 16, "grey"]
                , "variable_funcs_code6": ["create_text", "Basic format: [\"min_time_start\", \"row_name\"]", "#A4", 12, "orange"]
                , "variable_funcs_text6a": ["create_text", "In the following example, we want to know the start time of the game, in seconds, by looking for the first kick off", "#A4", 16, "grey"]
                , "variable_funcs_code6a": ["create_text", "e.g: [\"min_time_start\", \"Kick Off\"]", "#A4", 12, "orange"]
                , "variable_funcs_title7": ["create_text", "max_time_end", "#A4", 20]
                , "variable_funcs_text7": ["create_text", "This function searches for the latest end time of the last clip. It can be row specific or search all clips if using \"\". This value can even be used in the other variable functions if it is defined before it is used.", "#A4", 16, "grey"]
                , "variable_funcs_code7": ["create_text", "Basic format: [\"max_time_end\", \"row_name\", [search_criteria] ]", "#A4", 12, "orange"]
                , "variable_funcs_text7a": ["create_text", "In the following example, we want to know the end time of the game, in seconds, by looking for the last 'Half End' clip", "#A4", 16, "grey"]
                , "variable_funcs_code7a": ["create_text", "e.g: [\"max_time_end\", \"Half End\"]", "#A4", 12, "orange"]
                , "button3": ["create_button_link", "^ Back to the top", "#A4", "help.html"] 

                , "content_funcs_heading": ["create_text", "Content Functions", "#A5", 32]
                , "content_funcs_intro": ["create_text", "Content functions are used within the \"content\" section of your JSON configuration file to create different types of elements, such as cards, charts, and text blocks, on your report. These functions make use of the values calculated by the variable functions and other additional parameters to display the information in the desired format.", "#A5", 16, "grey"]
                , "content_funcs_img1": ["create_image", "images/content.png", "#A5", 600]
                , "content_funcs_title1": ["create_text", "create_data_card", "#A5", 20]
                , "content_funcs_text1": ["create_text", "This function creates a data card with a title and value. It is used to display key data points in an easily digestible format.", "#A5", 16, "grey"]
                , "content_funcs_code1": ["create_text", "Basic format:   \"content_name\": [\"create_data_card\", \"content_title\", \"variable_name\", \"location_id\", \"color\", \"text_colour\"]", "#A5", 12, "orange"]
                , "content_funcs_code1a": ["create_text", "e.g:   \"content_funcs_data_card\": [\"create_data_card\", \"Card Example\", 123, \"#A5\", \"light_grey\", \"red\"]", "#A5", 12, "orange"]
                , "content_funcs_data_card": ["create_data_card", "Card Example", "var1", "#A5", "light_grey", "red"]
                , "content_funcs_title2": ["create_text", "create_success_donut", "#A5", 20]
                , "content_funcs_text2": ["create_text", "This function creates a donut chart that displays the success rate of a particular action. It is useful for visualizing the efficiency or effectiveness of specific actions or events", "#A5", 16, "grey"]
                , "content_funcs_code2": ["create_text", "Basic format:   \"content_name\": [\"create_success_donut\", \"content_title\", \"success_value\", \"failure_value\", \"location_id\", \"size\", \"color\"]", "#A5", 12, "orange"]
                , "content_funcs_code2a": ["create_text", "e.g:   \"content_funcs_donut\": [\"create_success_donut\", \"Donut Example\", 66,, 33, \"#A5\", 200, \"green\"]", "#A5", 12, "orange"]
                , "content_funcs_donut": ["create_success_donut", "Donut Example", 66, 33, "#A5", 200, "green"]
                , "content_funcs_title3": ["create_text", "create_contest_bar", "#A5", 20]
                , "content_funcs_text3": ["create_text", "This function creates a simple bar to display the contest between two different values. It is ideal for comparing two sets of data such as KPIs for and against or successful actions vs unsuccessful ones.", "#A5", 16, "grey"]
                , "content_funcs_code3": ["create_text", "Basic format:   \"content_name\": [\"create_contest_bar\", \"content_title\", \"success_value\", \"failure_value\", \"location_id\", \"width\", \"height\", \"color\"]", "#A5", 12, "orange"]
                , "content_funcs_code3a": ["create_text", "e.g:   \"content_funcs_contest\": [\"create_contest_bar\", \"Contest Example\", 66, 33, \"#A5\", 400, 50, \"turquoise\"]", "#A5", 12, "orange"]
                , "content_funcs_contest": ["create_contest_bar", "Contest Example", 66, 33, "#A5", 400, 40, "turquoise"]
                , "content_funcs_title4": ["create_text", "create_text", "#A5", 20]
                , "content_funcs_text4": ["create_text", "This function creates a text block with the specified content. It allows you to add custom text to your report, such as sub headings or explanations.", "#A5", 16, "grey"]
                , "content_funcs_code4": ["create_text", "Basic format:   \"content_name\": [\"create_text\", \"text\", , \"location_id\", \"size\", \"color\", \"align\"]", "#A5", 12, "orange"]
                , "content_funcs_code4a": ["create_text", "e.g:   \"content_funcs_text4b\": [\"create_text\", \"Some more text but this time in red size 16!!\", \"#A5\", 16, \"red\", \"center\"]", "#A5", 12, "orange"]
                , "content_funcs_text4b": ["create_text", "Some more text but this time in red, size 16 and centered!!", "#A5", 16, "red", "center"]
                , "content_funcs_title5": ["create_text", "create_image", "#A5", 20]
                , "content_funcs_text5": ["create_text", "This function adds an image from a source path, typically in the 'images' folder. It enables you to incorporate static visuals, like logos or diagrams, into your report.", "#A5", 16, "grey"]
                , "content_funcs_code5": ["create_text", "Basic format:   \"content_name\": [\"create_image\", \"source_path\", \"location_id\", \"width\"]", "#A5", 12, "orange"]
                , "content_funcs_code5a": ["create_text", "e.g:   \"our_logo\": [\"create_image\", \"images/fulcrumfc.png\", \"#A5\", 220]", "#A5", 12, "orange"]
                , "our_logo": ["create_image", "images/fulcrumfc.png", "#A5", 220]
                , "content_funcs_title6": ["create_text", "creat_button_link", "#A5", 20]
                , "content_funcs_text6": ["create_text", "This function adds a button to the report which can link to another html page. It enables you to create additional navigation around your report and even use it to imitate filter buttons for your data.", "#A5", 16, "grey"]
                , "content_funcs_code6": ["create_text", "Basic format:   \"content_name\": [\"create_button_link\", \"button_text\", \"location_id\", \"link_path\"]", "#A5", 12, "orange"]
                , "content_funcs_code6a": ["create_text", "e.g:   \"help_button\": [\"create_button_link\", \"^ Back to the top\", \"#A5\", \"help.html\"]", "#A5", 12, "orange"]
                , "help_button": ["create_button_link", "^ Back to the top", "#A5", "help.html"] 
                , "content_funcs_title7": ["create_text", "create_table", "#A5", 20]
                , "content_funcs_text7": ["create_text", "This function creates a table with specified data and column headers. It is an effective way to present data in a structured, organized format.", "#A5", 16, "grey"]
                , "content_funcs_code7": ["create_text", "Basic format:   \"content_name\": [\"create_table\", \"content_title\", \"table_date\", \"location_id\", \"color\"]", "#A5", 12, "orange"]
                , "content_funcs_code7a": ["create_text", "e.g:   \"content_funcs_table\": [\"create_table\", \"Example Table\", \"matrix_table\", \"#A5\", \"blue\"]", "#A5", 12, "orange"]
                , "content_funcs_table": ["create_table", "Example Table", "matrix_table", "#A5", "Brown"]
                , "button4": ["create_button_link", "^ Back to the top", "#A5", "help.html"] 

                , "advanced_reports_heading": ["create_text", "Advanced Reports", "#A6", 32]
                , "advanced_reports_intro": ["create_text", "In this section, we'll drop the chains of a json configuration file, diving straight into the actual code and explore some more advanced reporting techniques that you can use to build even more powerful reports. We'll show you how to use JavaScript, HTML, and CSS to create reports that go beyond the basics. By the end of this section, you'll have the knowledge you need to build complex, dynamic reports that provide real value to your business.", "#A6", 16, "grey"]
                , "advanced_reports_coming_soon": ["create_text", "More Coming Soon...", "#A6", 24, "red"]
                , "troubleshooting_heading": ["create_text", "Troubleshooting Tips", "#A7", 32]
                , "troubleshootiing_intro": ["create_text", "Sometimes, things don't go according to plan. In this section, we'll provide you with some troubleshooting tips to help you overcome any issues you might encounter when working with Fulcrum HTML reporting documentation. From common errors to more complex issues, we'll provide you with the tools you need to get back on track.", "#A7", 16, "grey"]
                , "troubleshooting_coming_soon": ["create_text", "More Coming Soon...", "#A7", 24, "red"]
                , "faq_heading": ["create_text", "Frequently Asked Questions (FAQs)", "#A8", 32]
                , "faq_intro": ["create_text", "Got questions? We've got answers! In this section, we'll provide you with answers to some of the most common questions we receive about Fulcrum HTML reporting documentation. Whether you're looking for clarification on a particular concept or just need some guidance on getting started, this section is a great place to start.", "#A8", 16, "grey"]
                , "faq_coming_soon": ["create_text", "More Coming Soon...", "#A8", 24, "red"]

    }
}